// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/web-platform-tests/wpt.fyi/shared (interfaces: ResponseBodyTransformer)

// Package sharedtest is a generated GoMock package.
package sharedtest

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockResponseBodyTransformer is a mock of ResponseBodyTransformer interface.
type MockResponseBodyTransformer struct {
	ctrl     *gomock.Controller
	recorder *MockResponseBodyTransformerMockRecorder
}

// MockResponseBodyTransformerMockRecorder is the mock recorder for MockResponseBodyTransformer.
type MockResponseBodyTransformerMockRecorder struct {
	mock *MockResponseBodyTransformer
}

// NewMockResponseBodyTransformer creates a new mock instance.
func NewMockResponseBodyTransformer(ctrl *gomock.Controller) *MockResponseBodyTransformer {
	mock := &MockResponseBodyTransformer{ctrl: ctrl}
	mock.recorder = &MockResponseBodyTransformerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResponseBodyTransformer) EXPECT() *MockResponseBodyTransformerMockRecorder {
	return m.recorder
}

// Transform mocks base method.
func (m *MockResponseBodyTransformer) Transform(arg0 io.Reader) (io.ReadCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Transform", arg0)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Transform indicates an expected call of Transform.
func (mr *MockResponseBodyTransformerMockRecorder) Transform(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Transform", reflect.TypeOf((*MockResponseBodyTransformer)(nil).Transform), arg0)
}
